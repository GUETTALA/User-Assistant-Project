/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ReseauPanel.java
 *
 * Created on 13 janv. 2011, 16:10:52
 */

package VisualAssistantFDM.configuration;

import vrminerlib.utils.MessageBox;

/**
 *
 * @author Abdelheq
 */
public class ReseauPanel extends javax.swing.JPanel {

    /** Creates new form ReseauPanel */
    public ReseauPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        adrsIpServerLabel = new javax.swing.JLabel();
        adrsIpServer = new javax.swing.JTextField();
        Connexion = new javax.swing.JButton();
        jCheckBoxReseau = new javax.swing.JCheckBox();
        Adr_IPLabel = new javax.swing.JLabel();
        Adr_IP = new javax.swing.JLabel();
        cheminLecteurLabel = new javax.swing.JLabel();
        cheminLecteur = new javax.swing.JTextField();
        BkgdImgChooser2 = new javax.swing.JButton();

        adrsIpServerLabel.setText("Adresse IP serveur :");

        adrsIpServer.setText("127.0.0.1  ");

        Connexion.setText("Connexion");

        jCheckBoxReseau.setText("Connexion reseau");
        jCheckBoxReseau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxReseauMouseClicked(evt);
            }
        });

        Adr_IPLabel.setText("Adresse IP Macine Courante :");

        Adr_IP.setBackground(new java.awt.Color(255, 0, 51));
        Adr_IP.setForeground(new java.awt.Color(204, 0, 51));

        cheminLecteurLabel.setText("Chemin du Lecteur de Medias :");

        cheminLecteur.setText("C:/Program Files/Windows Media Player/wmplayer.exe");

        BkgdImgChooser2.setText("...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(adrsIpServerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(adrsIpServer, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(Connexion))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(jCheckBoxReseau))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(Adr_IPLabel)
                        .addGap(12, 12, 12)
                        .addComponent(Adr_IP, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(58, 58, 58))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cheminLecteurLabel)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cheminLecteur, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BkgdImgChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(adrsIpServerLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(adrsIpServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Connexion))
                .addGap(9, 9, 9)
                .addComponent(jCheckBoxReseau)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Adr_IPLabel)
                    .addComponent(Adr_IP))
                .addGap(18, 18, 18)
                .addComponent(cheminLecteurLabel)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cheminLecteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BkgdImgChooser2))
                .addContainerGap(17, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxReseauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxReseauMouseClicked
        if (jCheckBoxReseau.isSelected()) {
        if (!Connexion.isEnabled()) {
            jCheckBoxReseau.setSelected(true);
        } else {
            new MessageBox("Warning", "Vous devez verifier votre connexion au reseau, cliquez sur connexion", MessageBox.WARNING);
            jCheckBoxReseau.setSelected(false);
        }
    } else {
        jCheckBoxReseau.setSelected(false);
    }
    }//GEN-LAST:event_jCheckBoxReseauMouseClicked

    public String getadrsIpServer() {
        return adrsIpServer.getText();
    }

    public String getjCheckBoxReseau() {
        if (jCheckBoxReseau.isSelected()) {
            return "true";
        } else {
            return "false";
        }
    }

    public String getcheminLecteur() {
        return cheminLecteur.getText();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Adr_IP;
    private javax.swing.JLabel Adr_IPLabel;
    private javax.swing.JButton BkgdImgChooser2;
    private javax.swing.JButton Connexion;
    private javax.swing.JTextField adrsIpServer;
    private javax.swing.JLabel adrsIpServerLabel;
    private javax.swing.JTextField cheminLecteur;
    private javax.swing.JLabel cheminLecteurLabel;
    private javax.swing.JCheckBox jCheckBoxReseau;
    // End of variables declaration//GEN-END:variables

}
